#pragma once

#include <S31/Error/Public/GeneratedRemosErrorCodes.h>

#include <Framework/Utils/Public/EnumClass.h>

namespace S31::Error
{
/**
 * @brief Codes for events that are raised and removed during runtime.
 *
 * @details
 * The codes are a subset of the remos codes %S31 is using for service log
 * entries.
 *
 * @ingroup S31ErrorGroup
 */
enum class EventCode: unsigned int
{
    GENERAL_SOFTWARE_ERROR = RemosCodes::REMOS_ERR_GENERAL_SOFTWARE_ERROR,
    GENERAL_NOT_FOR_CLINICAL_USE = RemosCodes::REMOS_ERR_NOT_FOR_CLINICAL_USE,

    NTP_HOST_COULD_NOT_BE_RESOLVED = RemosCodes::REMOS_ERR_NTP_HOST_COULD_NOT_BE_RESOLVED,
    NTP_SERVER_DOES_NOT_RESPOND_TO_REQUEST = RemosCodes::REMOS_ERR_NTP_SERVER_DOES_NOT_RESPOND_TO_REQUEST,
    NTP_UDP_SOCKET_COULD_NOT_BE_OPENED = RemosCodes::REMOS_ERR_NTP_UDP_SOCKET_COULD_NOT_BE_OPENED,
    NTP_UNRECOVERABLE_ERROR = RemosCodes::REMOS_ERR_UNRECOVERABLE_NTP_ERROR,

    SDC_NO_CLIENT_CONNECTED = RemosCodes::REMOS_ERR_NO_SDC_CLIENT_CONNECTED,
    SDC_NO_COMMUNICATION = RemosCodes::REMOS_ERR_NO_SDC_COMMUNICATION,

    CERTIFICATE_MISSING = RemosCodes::REMOS_ERR_NO_CERTIFICATE,
    CERTIFICATE_IS_NOT_AUTHORIZED = RemosCodes::REMOS_ERR_CERTIFICATE_IS_NOT_AUTHORIZED,
    CERTIFICATE_IS_NOT_YET_VALID = RemosCodes::REMOS_ERR_CERTIFICATE_IS_NOT_YET_VALID,
    CERTIFICATE_EXPIRES_SOON = RemosCodes::REMOS_ERR_CERTIFICATE_EXPIRES_SOON,
    CERTIFICATE_IS_EXPIRED = RemosCodes::REMOS_ERR_CERTIFICATE_IS_EXPIRED,

    RAL_IS_INVALID = RemosCodes::REMOS_ERR_ROLE_AUTORIZATION_LIST_INVALID,

    LOCATION_SAME_MDS_TYPE_FOUND = RemosCodes::REMOS_ERR_SAME_MDS_TYPE_FOUND,
    LOCATION_SAME_MDS_TYPE_FOUND_WITH_VALIDATED_LOCATION = RemosCodes::REMOS_ERR_SAME_MDS_TYPE_FOUND_WITH_VALIDATED_LOCATION,
    LOCATION_FROM_DEVICE_WHEN_AUTO_VALIDATION_IS_ON = RemosCodes::REMOS_ERR_LOCATION_FROM_DEVICE_WHEN_AUTO_VALIDATION_IS_ON,
    LOCATION_FROM_DEVICE_WHEN_USE_FIXED_LOCATION_IS_ON = RemosCodes::REMOS_ERR_LOCATION_FROM_DEVICE_WHEN_USE_FIXED_LOCATION_IS_ON,
    LOCATION_INVALID_EMPTY_MANDATORY_FIELD = RemosCodes::REMOS_ERR_INVALID_LOCATION_EMPTY_MANDATORY_FIELD,
    LOCATION_INVALID_FIELD_TOO_LONG = RemosCodes::REMOS_ERR_INVALID_LOCATION_FIELD_TOO_LONG,
    LOCATION_INVALID_FIELD_HAS_INVALID_CHARACTER = RemosCodes::REMOS_ERR_INVALID_LOCATION_FIELD_HAS_INVALID_CHARACTER
};

DFL_ENUM_CLASS_STREAM_OPERATOR(EventCode,
    (GENERAL_SOFTWARE_ERROR)
    (GENERAL_NOT_FOR_CLINICAL_USE)
    (NTP_HOST_COULD_NOT_BE_RESOLVED)(NTP_SERVER_DOES_NOT_RESPOND_TO_REQUEST)
    (NTP_UDP_SOCKET_COULD_NOT_BE_OPENED)(NTP_UNRECOVERABLE_ERROR)
    (SDC_NO_CLIENT_CONNECTED)(SDC_NO_COMMUNICATION)
    (CERTIFICATE_MISSING)(CERTIFICATE_IS_NOT_AUTHORIZED)
    (CERTIFICATE_IS_NOT_YET_VALID)(CERTIFICATE_EXPIRES_SOON)
    (CERTIFICATE_IS_EXPIRED)
    (RAL_IS_INVALID)
    (LOCATION_SAME_MDS_TYPE_FOUND)
    (LOCATION_SAME_MDS_TYPE_FOUND_WITH_VALIDATED_LOCATION)
    (LOCATION_FROM_DEVICE_WHEN_AUTO_VALIDATION_IS_ON)
    (LOCATION_FROM_DEVICE_WHEN_USE_FIXED_LOCATION_IS_ON)
    (LOCATION_INVALID_EMPTY_MANDATORY_FIELD)
    (LOCATION_INVALID_FIELD_TOO_LONG)
    (LOCATION_INVALID_FIELD_HAS_INVALID_CHARACTER))
}
